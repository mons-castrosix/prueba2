 pip install django


 exist=Recepcion.objects.filter(solicitud_id=sol).exists()
                print(exist)
                if(exist):
                    formulario=RecepcionForm()
                    messages.error(request,"Ya existe recepción registrada para este producto ")
                    
                elif (compra.exists() == False):
                    formulario=RecepcionForm()
                    messages.error(request,"No existe compra registrada para esta recepcion ")
                    

python3 -m pip install django-mysql
pip install django-bootstrap-v5

solicitudes=Solicitud.objects.select_related('bodegaproducto','compra').values('bodegaproducto_id','solicitud','cantidad','descripcion','unidad','bodegaproducto_id__cantidad','compra','id').annotate(total=Count('solicitud')).order_by('solicitud','total').filter(solicitud=solicitud)
    id=Solicitud.objects.select_related('bodegaproducto','compra','recepcion').values('id').filter(solicitud=solicitud)    
    compra=Compra.objects.select_related('solicitud').filter(solicitud_id__in=id).values() 
    
    
    data={
        'solicitudes':solicitudes,
        'form':RecepcionForm(),
        'compra':compra
    }
    if request.method =="POST":
        llegada=[]
        pendiente=[]
        utilizado=[]
        solicitud=[]
        
        for ll in request.POST.getlist("llegada"):
            llegada.append(ll)
        for p in request.POST.getlist("pendiente"):
            pendiente.append(p)
        for u in request.POST.getlist("utilizado"):
            utilizado.append(u)
            
        for s in request.POST.getlist("solicitud"):
            solicitud.append(s)
        
        print(request.POST)
        
        
        
        
        for llega in llegada:
            if(llega == ''):
                pass
            else:
                i=0
        x=0
        y=0
                sol=solicitud[y]
                exist=Recepcion.objects.filter(solicitud_id=sol).exists()
                print(exist)
                if(exist):
                    formulario=RecepcionForm()
                    messages.error(request,"Ya existe recepción registrada para este producto ")
                    return redirect("/inventario/recepcion-bodega/")
                elif (compra.exists() == False):
                    formulario=RecepcionForm()
                    messages.error(request,"No existe compra registrada para esta recepcion ")
                    return redirect("/inventario/recepcion-bodega/")
                else:
                    sal=request.POST.get("saldo")
                    llego=llega
                    producto=Solicitud.objects.select_related('bodegaproducto','compra','recepcion').values('bodegaproducto_id').filter(id=sol)
                    productobodega=BodegaProductos.objects.get(id__in=producto)

                    
                    
                    
                    pend=pendiente[i]
                    if pend == '':
                        pend=0
                    usado=utilizado[x]
                    print(llego)
                    print(pend)
                    print("COMPRA"+str(compra[i]['compra']))
                    datos={'solicitud':sol,'llegada':llego,'pendiente':pend,'utilizado':usado,'saldo':sal}
                    print(datos)
                    
                    
                    if(int(compra[i]['compra']) > int(int(llego)+int(pend)) or int(compra[i]['compra']) < int(int(llego)+int(pend))):
                        print("no es igual")
                        formulario=RecepcionForm()
                        messages.error(request,"El producto con clave de solicitud "+str(compra[i]['solicitud_id'])+" no coincide, Llegada y Pendiente es diferente a la Compra Registrada")
                        #return redirect("/inventario/recepcion-bodega/")
                    elif (int(compra[i]['compra']) == int(int(llego)+int(pend))):
                        print(productobodega.cantidad)
                        antes=productobodega.cantidad
                        productobodega.cantidad=int(antes)+int(llego)
                        productobodega.save()
                        formulario=RecepcionForm(datos)
                        print(formulario.errors)
                        print("igual")
                        formulario.save()
                i+=1
                x+=1
                y+=1
    
            if formulario.is_valid():
                pass
                messages.success(request, "Recepcion Registrada")
                return redirect("/inventario/recepcion-bodega/")
            else:
                data["form"]=formulario
    
    return render(request,'app/requisiciones/recepcion_registro.html',data)





    solicitudes=Solicitud.objects.select_related('bodegaproducto','compra').values('bodegaproducto_id','solicitud','cantidad','descripcion','unidad','bodegaproducto_id__cantidad','compra','id').annotate(total=Count('solicitud')).order_by('solicitud','total').filter(solicitud=solicitud)
    id=Solicitud.objects.select_related('bodegaproducto','compra','recepcion').values('id').filter(solicitud=solicitud)    
    compra=Compra.objects.select_related('solicitud').filter(solicitud_id__in=id).values() 
    data={
        'solicitudes':solicitudes,
        'form':RecepcionForm(),
        'compra':compra
    }
    if request.method =="POST":
        llegada=[]
        pendiente=[]
        utilizado=[]
        solicitud=[]
        
        for ll in request.POST.getlist("llegada"):
            llegada.append(ll)
        for p in request.POST.getlist("pendiente"):
            pendiente.append(p)
        for u in request.POST.getlist("utilizado"):
            utilizado.append(u)
            
        for s in request.POST.getlist("solicitud"):
            solicitud.append(s)
        
        print(request.POST)
        #print(llegada)
        #print(pendiente)
        #print(utilizado)
        i=0
        x=0
        y=0
        for llega in llegada:
            if(llega == ''):
                pass
            else:
                sol=solicitud[y]
                exist=Recepcion.objects.filter(solicitud_id=sol).exists()
                #print(exist)
                if(exist):
                    formulario=RecepcionForm()
                    messages.error(request,"Ya existe recepción registrada para este producto ")
                    return redirect("/inventario/recepcion-bodega/")
                elif (compra.exists() == False):
                    formulario=RecepcionForm()
                    messages.error(request,"No existe compra registrada para esta recepcion ")
                    return redirect("/inventario/recepcion-bodega/")
                else:
                    sal=request.POST.get("saldo")
                    llego=llega
                    pend=pendiente[i]
                    producto=Solicitud.objects.select_related('bodegaproducto','compra','recepcion').values('bodegaproducto_id').filter(id=sol)
                    productobodega=BodegaProductos.objects.get(id__in=producto)
                    if pend == '':
                        pend=0
                    usado=utilizado[x]
                    datos={'solicitud':sol,'llegada':llego,'pendiente':pend,'utilizado':usado,'saldo':sal}
                    print(datos)
                    print("COMPRA"+str(compra[i]['compra']))
                    if(int(compra[i]['compra']) > int(int(llego)+int(pend)) or int(compra[i]['compra']) < int(int(llego)+int(pend))):
                        print("no es igual")
                        formulario=RecepcionForm()
                        messages.error(request,"El producto con clave de solicitud "+str(compra[i]['solicitud_id'])+" no coincide, Llegada y Pendiente es diferente a la Compra Registrada")
                    else:
                        print(productobodega.cantidad)
                        antes=productobodega.cantidad
                        productobodega.cantidad=int(antes)+int(llego)
                        productobodega.save()
                        formulario=RecepcionForm(datos)
                        print(formulario.errors)
                        formulario.save()
                    
            i+=1
            x+=1
            y+=1
    
        if formulario.is_valid():
            pass
            messages.success(request, "Recepcion Registrada")
            return redirect("/inventario/recepcion-bodega/")
        else:
            data["form"]=formulario
    
    return render(request,'app/requisiciones/recepcion_registro.html',data)



    k=str(solicitud)
    solicitudes=Solicitud.objects.filter(solicitud=k)    
    so=solicitud
    data={
        'solicitudes':solicitudes,
        'form':CompraForm(),
        'files':FileForm(),
    }  
    
    if request.method =="POST":
        print(request.POST)
        for file in request.FILES.getlist("file_field"):
            print(file)
            instance=Archivos(solicitud=so,ruta=file)
            instance.save()
            print(instance)

        
        import time

        print("Printed immediately.")
        time.sleep(2.4)
        messages.info(request,"Cargando Factura")
        print("Printed after 2.4 seconds.")
        #rutas=['xml/CFDI_16-0001014.xml','xml/CFDI_FTU0000629.xml','xml/FacCFDI_GMU160422511_GBT-67150081.xml','xml/4855603HFGCE00867300801810072322261.xml']
        #leer("xml/ejemplo.xml")
        lee=Archivos.objects.filter(solicitud=solicitud).values('ruta')
        print(lee)
        dfs=[]
        rutas=[]
        for r in lee:
            rut=str(r['ruta'])
            print(rut)
            rutas.append(rut)
            
        
        for d in rutas:
            f=leer(d)
            print(d)
            dfs.append(f)
        
        df2=pd.concat(dfs)
        
        df2['Total']=round(df2['Importe']/df2['ValorUnitario'])
        df3=df2.groupby('Descripcion').sum()
        
        print(df3)
        d_factura=[]
        c_factura=[]
        for row in df3.itertuples():
            factura={'descripcion':row.Index,'cantidad':int(row.Total)}
            d_factura.append(row.Index)
            c_factura.append(factura)
            
        
        print(d_factura)
        #print(c_factura)
        
        
        solicit=[]
         
        for s in request.POST.getlist("solicitud"):
            solicit.append(s)
       
    
        osoli=[]    
        cn=[]   
        slc=[]        
        e=""
        
        for i in solicit:
                producto=Solicitud.objects.select_related('bodegaproducto').filter(id=i).values('bodegaproducto_id__descripcion','id')
                #print(producto)
                str_match = [s for s in d_factura if s.__contains__(producto[0]['bodegaproducto_id__descripcion'])]
                if (str_match):
                    print("Existe" + str(producto[0]['bodegaproducto_id__descripcion']))
                    osoli.append(str(producto[0]['id']))
                    cn.append(str(producto[0]['bodegaproducto_id__descripcion']))
                    #slc.append(str(producto[0]['bodegaproducto_id']))
                    borra=Archivos.objects.filter(solicitud=solicitud)
                    for b in borra:
                        print("BORRA:"+str(b))
                        b.delete()
                else:
                    print("No existe"+str(producto[0]['bodegaproducto_id__descripcion']))
                    e=e+","+str(producto[0]['bodegaproducto_id__descripcion'])
                    #messages.error(request,"La factura no incluye: "+ str(e))
                    osoli.append(str(producto[0]['id']))
                    cn.append(str(producto[0]['bodegaproducto_id__descripcion']))
                    factura={'descripcion':str(producto[0]['bodegaproducto_id__descripcion']),'cantidad':int(0)}
                    
                    c_factura.append(factura)
                    d_factura.append(str(producto[0]['bodegaproducto_id__descripcion']))
                    borra=Archivos.objects.filter(solicitud=solicitud)
                    for b in borra:
                        print("BORRA:"+str(b))
                        b.delete()
                    
        print(osoli)
        print(cn)
        for item in c_factura:
            #print(item['descripcion'])
                        
            for m in cn:
                if(item['descripcion'] == m):
                    index=d_factura.index(item['descripcion']) 
                    print(item['descripcion'])
                    print(index)
                    index2=cn.index(item['descripcion'])
                    print(index2)
                    #print(osoli[index2])
                    #print(item['descripcion'])
                    #print(item['cantidad'])
                    #po=Solicitud.objects.select_related('bodegaproducto').filter(id=osoli[index2]).values('bodegaproducto_id')
                    #print(po[0]['bodegaproducto_id'])
                    exist=Compra.objects.filter(solicitud_id=osoli[index2]).exists() 
                    print(exist)
                    if(exist):
                        print("ya existe")
                        messages.error(request,"Ya existe compra registrada para este producto")
                        formulario=CompraForm()
                    else:
                        datos={'solicitud':osoli[index2],'descripcion':item['descripcion'],'compra':item['cantidad'] }
                        print(datos)
                        #print(datos)
                        formulario=CompraForm(datos)
                        formulario.save()
                                    
        if formulario.is_valid():
                pass
                if(e != ''):
                    messages.success(request, "Compra Registrada, La factura no incluye: "+ str(e))
                else:
                    messages.success(request, "Compra Registrada")
                
                return redirect("/inventario/solicitudes/")
        else:
                data["form"]=formulario
        
       
        
                   
                    
                        
        
        
               
            
       
    